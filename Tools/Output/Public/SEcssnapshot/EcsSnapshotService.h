//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcService.h"
#include "SEcssnapshot/EcsSnapshotClient.h"
#include "EcsSnapshotService.generated.h"

class UTurboLinkGrpcManager;

UCLASS(ClassGroup = TurboLink, BlueprintType)
class TURBOLINKGRPC_API UECSStateSnapshotService : public UGrpcService
{
	GENERATED_BODY()
public:
	UFUNCTION(BlueprintCallable, Category = TurboLink)
	virtual void Connect() override;
	
	UFUNCTION(BlueprintCallable, Category = TurboLink)
	virtual EGrpcServiceState GetServiceState() const override;

	UFUNCTION(BlueprintCallable, Category = TurboLink)
	UECSStateSnapshotServiceClient* MakeClient();

private:
	virtual void Shutdown() override;

	UPROPERTY()
	UECSStateSnapshotServiceClient* InnerClient; 
public:
	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcEcssnapshotECSStateReply& Response)> FGetStateLatestResponseLambda;
	void CallGetStateLatest(const FGrpcEcssnapshotECSStateRequestLatest& Request, FGetStateLatestResponseLambda ResponseLambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcEcssnapshotECSStateReply& Response)> FGetStateLatestStreamResponseLambda;
	typedef TFunction<void()> FGetStateLatestStreamFinishLambda;
	void CallGetStateLatestStream(const FGrpcEcssnapshotECSStateRequestLatestStream& Request, FGetStateLatestStreamResponseLambda ResponseLambda, FGetStateLatestStreamFinishLambda FinishLambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcEcssnapshotECSStateReplyV2& Response)> FGetStateLatestStreamV2ResponseLambda;
	typedef TFunction<void()> FGetStateLatestStreamV2FinishLambda;
	void CallGetStateLatestStreamV2(const FGrpcEcssnapshotECSStateRequestLatestStream& Request, FGetStateLatestStreamV2ResponseLambda ResponseLambda, FGetStateLatestStreamV2FinishLambda FinishLambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcEcssnapshotECSStateReply& Response)> FGetStateLatestStreamPrunedResponseLambda;
	typedef TFunction<void()> FGetStateLatestStreamPrunedFinishLambda;
	void CallGetStateLatestStreamPruned(const FGrpcEcssnapshotECSStateRequestLatestStreamPruned& Request, FGetStateLatestStreamPrunedResponseLambda ResponseLambda, FGetStateLatestStreamPrunedFinishLambda FinishLambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcEcssnapshotECSStateReplyV2& Response)> FGetStateLatestStreamPrunedV2ResponseLambda;
	typedef TFunction<void()> FGetStateLatestStreamPrunedV2FinishLambda;
	void CallGetStateLatestStreamPrunedV2(const FGrpcEcssnapshotECSStateRequestLatestStreamPruned& Request, FGetStateLatestStreamPrunedV2ResponseLambda ResponseLambda, FGetStateLatestStreamPrunedV2FinishLambda FinishLambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcEcssnapshotECSStateBlockReply& Response)> FGetStateBlockLatestResponseLambda;
	void CallGetStateBlockLatest(const FGrpcEcssnapshotECSStateBlockRequestLatest& Request, FGetStateBlockLatestResponseLambda ResponseLambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcEcssnapshotECSStateReply& Response)> FGetStateAtBlockResponseLambda;
	void CallGetStateAtBlock(const FGrpcEcssnapshotECSStateRequestAtBlock& Request, FGetStateAtBlockResponseLambda ResponseLambda);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcEcssnapshotWorlds& Response)> FGetWorldsResponseLambda;
	void CallGetWorlds(const FGrpcEcssnapshotWorldsRequest& Request, FGetWorldsResponseLambda ResponseLambda);

public:
	class Private;
	Private* const d = nullptr;

public:
	UECSStateSnapshotService();
	virtual ~UECSStateSnapshotService();
};

