//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "CoreMinimal.h"
#include "Kismet/BlueprintAsyncActionBase.h"
#include "TurboLinkGrpcClient.h"
#include "EcsSnapshotMessage.h"
#include "EcsSnapshotNode.generated.h"

class UECSStateSnapshotService;
class UECSStateSnapshotServiceClient;

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallECSStateSnapshotServiceGetStateLatest : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FECSStateSnapshotServiceGetStateLatestDelegate, const FGrpcResult&, GrpcResult, const FGrpcEcssnapshotECSStateReply&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ECSStateSnapshotService GetStateLatest"), Category = "TurboLink|ECSStateSnapshotService")
	static UCallECSStateSnapshotServiceGetStateLatest* GetStateLatest(UObject* WorldContextObject, const FGrpcEcssnapshotECSStateRequestLatest& Request);

	UPROPERTY(BlueprintAssignable)
	FECSStateSnapshotServiceGetStateLatestDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FECSStateSnapshotServiceGetStateLatestDelegate OnFail;

private:
	UPROPERTY()
	UECSStateSnapshotService* ECSStateSnapshotService;
	
	UPROPERTY()
	UECSStateSnapshotServiceClient* ECSStateSnapshotServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcEcssnapshotECSStateRequestLatest Request;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcEcssnapshotECSStateReply& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallECSStateSnapshotServiceGetStateBlockLatest : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FECSStateSnapshotServiceGetStateBlockLatestDelegate, const FGrpcResult&, GrpcResult, const FGrpcEcssnapshotECSStateBlockReply&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ECSStateSnapshotService GetStateBlockLatest"), Category = "TurboLink|ECSStateSnapshotService")
	static UCallECSStateSnapshotServiceGetStateBlockLatest* GetStateBlockLatest(UObject* WorldContextObject, const FGrpcEcssnapshotECSStateBlockRequestLatest& Request);

	UPROPERTY(BlueprintAssignable)
	FECSStateSnapshotServiceGetStateBlockLatestDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FECSStateSnapshotServiceGetStateBlockLatestDelegate OnFail;

private:
	UPROPERTY()
	UECSStateSnapshotService* ECSStateSnapshotService;
	
	UPROPERTY()
	UECSStateSnapshotServiceClient* ECSStateSnapshotServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcEcssnapshotECSStateBlockRequestLatest Request;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcEcssnapshotECSStateBlockReply& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallECSStateSnapshotServiceGetStateAtBlock : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FECSStateSnapshotServiceGetStateAtBlockDelegate, const FGrpcResult&, GrpcResult, const FGrpcEcssnapshotECSStateReply&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ECSStateSnapshotService GetStateAtBlock"), Category = "TurboLink|ECSStateSnapshotService")
	static UCallECSStateSnapshotServiceGetStateAtBlock* GetStateAtBlock(UObject* WorldContextObject, const FGrpcEcssnapshotECSStateRequestAtBlock& Request);

	UPROPERTY(BlueprintAssignable)
	FECSStateSnapshotServiceGetStateAtBlockDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FECSStateSnapshotServiceGetStateAtBlockDelegate OnFail;

private:
	UPROPERTY()
	UECSStateSnapshotService* ECSStateSnapshotService;
	
	UPROPERTY()
	UECSStateSnapshotServiceClient* ECSStateSnapshotServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcEcssnapshotECSStateRequestAtBlock Request;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcEcssnapshotECSStateReply& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallECSStateSnapshotServiceGetWorlds : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FECSStateSnapshotServiceGetWorldsDelegate, const FGrpcResult&, GrpcResult, const FGrpcEcssnapshotWorlds&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ECSStateSnapshotService GetWorlds"), Category = "TurboLink|ECSStateSnapshotService")
	static UCallECSStateSnapshotServiceGetWorlds* GetWorlds(UObject* WorldContextObject, const FGrpcEcssnapshotWorldsRequest& Request);

	UPROPERTY(BlueprintAssignable)
	FECSStateSnapshotServiceGetWorldsDelegate OnSuccess;

	UPROPERTY(BlueprintAssignable)
	FECSStateSnapshotServiceGetWorldsDelegate OnFail;

private:
	UPROPERTY()
	UECSStateSnapshotService* ECSStateSnapshotService;
	
	UPROPERTY()
	UECSStateSnapshotServiceClient* ECSStateSnapshotServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcEcssnapshotWorldsRequest Request;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcEcssnapshotWorlds& Response);

	void Shutdown();
};
