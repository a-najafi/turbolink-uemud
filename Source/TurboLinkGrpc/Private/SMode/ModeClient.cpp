//Generated by TurboLink CodeGenerator, do not edit!
#include "SMode/ModeClient.h"
#include "SMode/ModeService.h"
#include "ModeContext.h"
#include "TurboLinkGrpcManager_Private.h"
#include "Templates/SharedPointer.h"

FGrpcContextHandle UQueryLayerClient::InitGetState()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_QueryLayer_GetState>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UQueryLayerClient::GetState(FGrpcContextHandle Handle, const FGrpcModeStateRequest& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextGetState = StaticCastSharedPtr<GrpcContext_QueryLayer_GetState>(*context);
		contextGetState->Call(Request);
	}
}
FGrpcContextHandle UQueryLayerClient::InitStreamState()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_QueryLayer_StreamState>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UQueryLayerClient::StreamState(FGrpcContextHandle Handle, const FGrpcModeStateRequest& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextStreamState = StaticCastSharedPtr<GrpcContext_QueryLayer_StreamState>(*context);
		contextStreamState->Call(Request);
	}
}
FGrpcContextHandle UQueryLayerClient::InitSingle__GetState()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_QueryLayer_Single__GetState>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UQueryLayerClient::Single__GetState(FGrpcContextHandle Handle, const FGrpcModeSingle__StateRequest& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextSingle__GetState = StaticCastSharedPtr<GrpcContext_QueryLayer_Single__GetState>(*context);
		contextSingle__GetState->Call(Request);
	}
}
FGrpcContextHandle UQueryLayerClient::InitSingle__StreamState()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_QueryLayer_Single__StreamState>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UQueryLayerClient::Single__StreamState(FGrpcContextHandle Handle, const FGrpcModeSingle__StateRequest& Request)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		auto contextSingle__StreamState = StaticCastSharedPtr<GrpcContext_QueryLayer_Single__StreamState>(*context);
		contextSingle__StreamState->Call(Request);
	}
}
void UQueryLayerClient::TryCancel(FGrpcContextHandle Handle)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		(*context)->TryCancel();
	}
}

void UQueryLayerClient::Shutdown()
{
	OnGetStateResponse.Clear();
	OnStreamStateResponse.Clear();
	OnSingle__GetStateResponse.Clear();
	OnSingle__StreamStateResponse.Clear();
	Super::Shutdown();
}
